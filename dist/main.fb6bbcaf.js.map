{"version":3,"sources":["js/Lore.js","js/main.js"],"names":["Lore","exports","default","_createClass","data","_classCallCheck","name","id","title","image","full","tags","info","stats","partype","blurb","_Lore","_interopRequireDefault","require","e","__esModule","heroes","button","document","querySelector","addEventListener","style","display","fetchChampions","fetch","then","response","json","key","champion","lore","push","renderCards","catch","err","console","error","resultados","getElementById","innerHTML","forEach","hero","concat","join","attack","defense","magic","difficulty"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["// Exportamos por defecto la clase Lore\r\nexport default class Lore {\r\n    // Constructor que recibe como parámetro data que contiene los datos del campeón que obtenemos desde la API\r\n    constructor(data) {\r\n        this.name = data.name;                      // Nombre del campeón\r\n        this.id = data.id;                          // Id del campeón\r\n        this.title = data.title;                    // Título del campeón\r\n        this.image = data.image.full;               // Imagen principal del campeón\r\n        this.tags = data.tags;                      // Roles del campeón (Devuelve un array)\r\n        this.info=data.info;                        // Información del campeón\r\n        this.stats = data.stats;                    // Estadísticas base del campeón\r\n        this.partype = data.partype;                // Tipo de recurso (maná, energía, etc.)\r\n        this.blurb = data.blurb;                    // Descripción breve del campeón\r\n    }\r\n}\r\n","// Importamos la clase Lore desde Lore.js\nimport Lore from './Lore.js';\n\n// Array para almacenar los campeones obtenidos\nlet heroes = [];\n\n// Seleccionamos el botón y añadimos evento de clic\nconst button = document.querySelector(\"#button\");\n\nbutton.addEventListener(\"click\", () => {\n    button.style.display = \"none\"; // Oculta el botón al hacer clic\n    fetchChampions(); // Llama a la función para cargar los campeones\n});\n\n// Función para obtener los campeones desde la API\nfunction fetchChampions() {\n    fetch(\"https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json\")\n        .then(response => response.json())\n        .then(data => {\n            for (const key in data.data) {\n                const champion = data.data[key];\n                const lore = new Lore(champion);\n                heroes.push(lore);\n            }\n            renderCards(); // Llama a la función para renderizar\n        })\n        .catch(err => console.error(\"Error fetching champions:\", err));\n}\n\n// Función para renderizar las tarjetas en el DOM\nfunction renderCards() {\n    const resultados = document.getElementById(\"resultados\");\n    resultados.innerHTML = \"\"; // Limpia el contenedor antes de agregar\n\n    heroes.forEach(hero => {\n        resultados.innerHTML += `\n            <div class=\"card\">\n                <img src=\"https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/${hero.image}\" alt=\"${hero.name}\">\n                <h3>${hero.name} - ${hero.title}</h3>\n                <p>${hero.blurb}</p>\n                <div class=\"roles\">\n                    Roles: ${hero.tags.join(', ')}\n                </div>\n                <div class=\"info\">\n                    <p>Ataque: ${hero.info.attack}</p>\n                    <p>Defensa: ${hero.info.defense}</p>\n                    <p>Magia: ${hero.info.magic}</p>\n                    <p>Dificultad: ${hero.info.difficulty}</p>\n                </div>\n            </div>\n        `;\n    });\n}\n"]}